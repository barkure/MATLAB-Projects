% 清除当前工作区中的所有变量
clear;

% 设置频率间隔
df = 1;

% 设置最大频率
fmax = 100;

% 计算频率点的数量
n = floor(fmax / df);

% 创建时间向量从-0.2到0.2，以0.001的间隔
t = -0.2:0.001:0.2;

% 初始化累积信号
xt = 0;

% 创建巴特莱特窗口，用于信号处理
window = bartlett(length(n));

% 循环处理不同频率
for i = 1:n
    % 计算当前频率对应的角频率
    w = 2 * pi * (i * df);
    
    % 复制窗口函数
    a = window;
    
    % 生成余弦波信号，频率由w决定，受窗口a影响
    x = a * cos(w * t + 0 * pi);
    
    % 存储生成的信号x到yx数组的第i列
    yx(:,i) = x';
    
    % 累积信号
    xt = xt + x;
    
    % 绘制累积信号xt随时间t的图形
    plot(t, xt);
end

% 将数据标准化，使其最大值为1，并存储在yx的最后一列
yx(:, i + 1) = xt / max(xt);

% 创建第二个图形窗口
figure(2);

% 使用wigb函数绘制yx的图像，通常用于显示时频域的信号表示
wigb(yx);
